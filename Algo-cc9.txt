-------------------------------------------------------------------------------------------
Algorithm 1.1.1: Add Room
	Step1: Start
	Step2: Read room_no, room_bed_type, room_type and room_rent
	Step3: Store room details in room_record table
	Step4: Display a message indicating successful/unsuccessful insertion
	Step5: Stop
Algorithm 1.2.2: Delete Room 
	Step1: Start
	Step2: Read room_no
	Step3: Search for the record corresponding to the given room_no
	Step4: If found remove the corresponding room details from room_record table
	Step5: Display a message indicating successful/unsuccessful deletion
	Step6: Stop
Algorithm 1.2.3: Update Room
	Step1: Start
	Step2: Read few room details along with room_no
	Step3: Search for the record corresponding to the given room_no
	Step4: If found update room details in room_record table
	Step5: Display a message indicating successful/unsuccessful Updation
	Step6: Stop
Algorithm 1.2.4: View a specific room 
	Step1: Start
	Step2: Read room_no
	Step3: Search for the record corresponding to the given room_no
	Step4: If found display the details of the room corresponding to the room_no else display appropriate message.
	Step5: Stop
Algorithm 1.2.5: View all room details
	Step1: Start
	Step2: Fetch all room details from the room_record table
	Step3: Display all room details
	Step4: Stop
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
Algorithm 1.2.1: Add Customer 
	Step1: Start
	Step2: Read name, address, phone number, ID-type and ID-number
	Step3: Generate a unique customer_ID
	Step4: Store customer details in customer_record table
	Step5: Display a message indicating successful/unsuccessful insertion
	Step6: Stop
Algorithm 1.2.2: Delete Customer 
	Step1: Start
	Step2: Read customer_ID
	Step3: If found remove customer details from customer_record table
	Step4: Display a message indicating successful/unsuccessful deletion
	Step5: Stop
Algorithm 1.2.3: Update Customer
	Step1: Start
	Step2: Read few customer details along with customer_ID
	Step3: If found update customer details in customer_record table
	Step4: Display a message indicating successful/unsuccessful Updation
	Step5: Stop
Algorithm 1.2.4: View a specific customer 
	Step1: Start
	Step2: Read customer_ID
	Step3: If found display the details of the customer corresponding to the ID
	Step4: Stop
Algorithm 1.2.5: View all customer details
	Step1: Start
	Step2: Fetch all customer details from the customer_record table
	Step3: Display all customer details
	Step4: Stop
------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
Algorithm 1.3.1: Book Room 
	Step1: Start
	Step2: Read customer_ID, room number and date of booking
	Step3: Store booking details in booking_record table
	Step4: Display a message indicating successful/unsuccessful insertion
	Step5: Stop
Algorithm 1.3.2: Delete Booking 
	Step1: Start
	Step2: Read room number
	Step3: If found remove booking details from booking_record table
	Step4: Display a message indicating successful/unsuccessful deletion
	Step5: Stop
Algorithm 1.3.3: Update Booking
	Step1: Start
	Step2: Read few booking details along with room number
	Step3: If found update booking details in booking_record table
	Step4: Display a message indicating successful/unsuccessful Updation
	Step5: Stop
Algorithm 1.3.4: View a specific Booking 
	Step1: Start
	Step2: Read room number
	Step3: If found display the details of the booking corresponding to the number
	Step4: Stop
Algorithm 1.3.5: View all Booking
	Step1: Start
	Step2: Fetch all booking details from the booking_record table
	Step3: Display all booking details
	Step4: Stop
--------------------------------------------------------------------------------------------